version 1.0
############################################################
# This is a WDL File                                       #
# This file was formed for spaceranger count               #
# Author: Sun Hao                                          #
# Date: YYYY/MM/DD 2024/04/08                              #
############################################################
task run_spaceranger_count {
    input {
        String sample_id
        Array[String] input_fastqs_directories
        String output_directory
        # Tar.gz reference in this format
        File reference_genome_tar_gz
        File probe_file
        String probe_set
        Boolean filter_probes
        File? image
        Array[File]? darkimage
        String? darkimagestr
        File? colorizedimage
        File? cytaimage
        Int? dapi_index

        File? target_panel
        Boolean no_bam
        Boolean secondary


        Int num_cpu
        String memory
        Int disk_space

    }

    command {
        set -e

        mkdir -p genome_dir
        tar xf ~{reference_genome_tar_gz} -C genome_dir --strip-components 1

        spaceranger count --id=results \
            --transcriptome=genome_dir \
            --fastqs='~{sep="," input_fastqs_directories}' \
            --sample=~{sample_id} \
            --probe-set=~{probe_file} \
            --localcores=~{num_cpu} \
            --localmem=~{memory}

        if [ "~{no_bam}" == "true" ]; then
            spaceranger count --no-bam
        fi

        if [ "~{secondary}" == "true" ]; then
            spaceranger count --nosecondary
        fi

        mv results/outs "~{output_directory}/~{sample_id}"
    }

    output {
        String output_count_directory = "~{output_directory}/~{sample_id}"
        String output_metrics_summary = "~{output_directory}/~{sample_id}/metrics_summary.csv"
        String output_web_summary = "~{output_directory}/~{sample_id}/web_summary.html"
    }

    runtime {
        docker: "python:3.9.19-slim-bullseye"
        cpu: cpu
        memory: memory
        disk: disk_space
    }
}


workflow spaceranger_count {
    input {
        String sample_id
        Array[String] input_fastqs_directories
        String output_directory

        File acronym_file

        String genome
        String probe_set = ""
        Boolean filter_probes = true

        File? image
        Array[File]? darkimage
        String? darkimagestr
        File? colorizedimage
        File? cytaimage

        Int? dapi_index

        String? slide
        String? area
        File? slidefile
        String? unknown_slide

        Boolean reorient_images = true
        File? loupe_alignment

        File? target_panel

        Boolean no_bam = false
        Boolean secondary = false

        Int? r1_length
        Int? r2_length

        String spaceranger_version
        String docker_registry

        String zones = "us-central1-b"
        Int num_cpu = 32
        String memory = "120G"
        Int disk_space = 500
        Int preemptible = 2
        String backend
    }

    call run_spaceranger_count {
        input:
            sample_id = sample_id,
            input_fastqs_directories = input_fastqs_directories,
            output_directory = output_directory,
            genome_file = acronym_file,
            probe_file = acronym_file,
            probe_set = probe_set,
            filter_probes = filter_probes,
            image = image,
            darkimage = darkimage,
            darkimagestr = darkimagestr,
            colorizedimage = colorizedimage,
            cytaimage = cytaimage,
            dapi_index = dapi_index,
            slide = slide,
            area = area,
            slidefile = slidefile,
            unknown_slide = unknown_slide,
            reorient_images = reorient_images,
            loupe_alignment = loupe_alignment,
            target_panel = target_panel,
            no_bam = no_bam,
            secondary = secondary,
            r1_length = r1_length,
            r2_length = r2_length,
            num_cpu = num_cpu,
            memory = memory,
            disk_space = disk_space,
          
    }

    output {
        String output_count_directory = run_spaceranger_count.output_count_directory
        String output_metrics_summary = run_spaceranger_count.output_metrics_summary
        String output_web_summary = run_spaceranger_count.output_web_summary
    }
}

